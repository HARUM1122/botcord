import 'package:discord/src/features/guild/screens/settings/audit_log/utils/audit_log_info/info/invite_info.dart';
import 'package:flutter/material.dart';

import 'package:nyxx/nyxx.dart';

import 'audit_log_info/audit_log_info.dart';
// const List<(String, String, AuditLogEvent?)> actions = [
//   ('All Actions', 'ALL', null),
//   ('Update Server', 'UPDATE', AuditLogEvent.guildUpdate),
//   ('Create Channel', 'ADD', AuditLogEvent.channelCreate),
//   ('Update Channel', 'UPDATE', AuditLogEvent.channelUpdate),
//   ('Delete Channel', 'REMOVE', AuditLogEvent.channelDelete),
//   ('Create Channel Permissions', 'ADD', AuditLogEvent.channelOverwriteCreate),
//   ('Update Channel Permissions', 'UPDATE', AuditLogEvent.channelOverwriteUpdate),
//   ('Delete Channel Permissions', 'REMOVE', AuditLogEvent.channelOverwriteDelete),
//   ('Kick Member', 'REMOVE', AuditLogEvent.memberKick),
//   ('Prune Members', 'REMOVE', AuditLogEvent.memberPrune),
//   ('Ban Member', 'REMOVE', AuditLogEvent.memberBanAdd),
//   ('Unban Member', 'ADD', AuditLogEvent.memberBanRemove),
//   ('Update Member', 'UPDATE', AuditLogEvent.memberUpdate),
//   ('Update Member Roles', 'UPDATE', AuditLogEvent.memberRoleUpdate),
//   ('Move Member', 'UPDATE', AuditLogEvent.memberMove),
//   ('Disconnect Member', 'REMOVE', AuditLogEvent.memberDisconnect),
//   ('Add Bot', 'ADD', AuditLogEvent.botAdd),
//   ('Create Role', 'ADD', AuditLogEvent.roleCreate),
//   ('Update Role', 'UPDATE', AuditLogEvent.roleUpdate),
//   ('Delete Role', 'REMOVE', AuditLogEvent.roleDelete),
//   ('Create Invite', 'ADD', AuditLogEvent.inviteCreate),
//   ('Update Invite', 'UPDATE', AuditLogEvent.inviteUpdate),
//   ('Delete Invite', 'REMOVE', AuditLogEvent.inviteDelete),
//   ('Create Webhook', 'ADD', AuditLogEvent.webhookCreate),
//   ('Update Webhook', 'UPDATE', AuditLogEvent.webhookUpdate),
//   ('Delete Webhook', 'REMOVE', AuditLogEvent.webhookDelete),
//   ('Create Emoji', 'ADD', AuditLogEvent.emojiCreate),
//   ('Update Emoji', 'UPDATE', AuditLogEvent.emojiUpdate),
//   ('Delete Emoji', 'REMOVE', AuditLogEvent.emojiDelete),
//   ('Delete Messages', 'REMOVE', AuditLogEvent.messageDelete),
//   ('Bulk Delete Messages', 'REMOVE', AuditLogEvent.messageBulkDelete),
//   ('Pin Message', 'ADD', AuditLogEvent.messagePin),
//   ('Unpin Message', 'REMOVE', AuditLogEvent.messageUnpin),
//   ('Create Integration', 'ADD', AuditLogEvent.integrationCreate),
//   ('Update Integration', 'UPDATE', AuditLogEvent.integrationUpdate),
//   ('Delete Integration', 'REMOVE', AuditLogEvent.integrationDelete),
//   ('Start Stage', 'ADD', AuditLogEvent.stageInstanceCreate),
//   ('Update Stage', 'UPDATE', AuditLogEvent.stageInstanceUpdate),
//   ('End Stage', 'REMOVE', AuditLogEvent.stageInstanceDelete),
//   ('Create Sticker', 'ADD', AuditLogEvent.stickerCreate),
//   ('Update Sticker', 'UPDATE', AuditLogEvent.stickerUpdate),
//   ('Delete Sticker', 'REMOVE', AuditLogEvent.stickerDelete),
//   ('Create Event', 'ADD', AuditLogEvent.guildScheduledEventCreate),
//   ('Update Event', 'UPDATE', AuditLogEvent.guildScheduledEventUpdate),
//   ('Delete Event', 'REMOVE', AuditLogEvent.guildScheduledEventDelete),
//   ('Create Thread', 'ADD', AuditLogEvent.threadCreate),
//   ('Update Thread', 'UPDATE', AuditLogEvent.threadUpdate),
//   ('Delete Thread', 'REMOVE', AuditLogEvent.threadDelete)
// ];
// void main() {
//   print(actions.length);
// }


// The element type '(String, String, AuditLogEvent, Future<(User, String, List<String>)> Function(AuditLogEntry))' can't be assigned to the map value type '(String, String, AuditLogEvent, Future<(User, String, List<String>)>)

const Map<int, (String, String, AuditLogEvent?, Future<(User, String, List<String>)> Function(AuditLogEntry)?)> actions = {
  0 : ('All Actions', 'ALL', null, null),
  1 : ('Update Server', 'UPDATE', AuditLogEvent.guildUpdate, getUpdateGuildSettingsLogEntryInfo),
  10 : ('Create Channel', 'ADD', AuditLogEvent.channelCreate, getCreateChannelLogEntryInfo),
  11 : ('Update Channel', 'UPDATE', AuditLogEvent.channelUpdate, getUpdateChannelLogEntryInfo),
  12 : ('Delete Channel', 'REMOVE', AuditLogEvent.channelDelete, getDeleteChannelLogEntryInfo),
  // 13 : ('Create Channel Permissions', 'ADD', AuditLogEvent.channelOverwriteCreate),
  // 14 : ('Update Channel Permissions', 'UPDATE', AuditLogEvent.channelOverwriteUpdate),
  // 15 : ('Delete Channel Permissions', 'REMOVE', AuditLogEvent.channelOverwriteDelete),
  // 20 : ('Kick Member', 'REMOVE', AuditLogEvent.memberKick),
  // 21 : ('Prune Members', 'REMOVE', AuditLogEvent.memberPrune),
  // 22 : ('Ban Member', 'REMOVE', AuditLogEvent.memberBanAdd),
  // 23 : ('Unban Member', 'ADD', AuditLogEvent.memberBanRemove),
  // 24 : ('Update Member', 'UPDATE', AuditLogEvent.memberUpdate),
  // 25 : ('Update Member Roles', 'UPDATE', AuditLogEvent.memberRoleUpdate),
  // 26 : ('Move Member', 'UPDATE', AuditLogEvent.memberMove),
  // 27 : ('Disconnect Member', 'REMOVE', AuditLogEvent.memberDisconnect),
  // 28 : ('Add Bot', 'ADD', AuditLogEvent.botAdd),
  // 30 : ('Create Role', 'ADD', AuditLogEvent.roleCreate),
  // 31 : ('Update Role', 'UPDATE', AuditLogEvent.roleUpdate),
  // 32 : ('Delete Role', 'REMOVE', AuditLogEvent.roleDelete),
  40 : ('Create Invite', 'ADD', AuditLogEvent.inviteCreate, getCreateInviteLogEntryInfo),
  // 41 : ('Update Invite', 'UPDATE', AuditLogEvent.inviteUpdate),
  // 42 : ('Delete Invite', 'REMOVE', AuditLogEvent.inviteDelete),
  // 50 : ('Create Webhook', 'ADD', AuditLogEvent.webhookCreate),
  // 51 : ('Update Webhook', 'UPDATE', AuditLogEvent.webhookUpdate),
  // 52 : ('Delete Webhook', 'REMOVE', AuditLogEvent.webhookDelete),
  // 60 : ('Create Emoji', 'ADD', AuditLogEvent.emojiCreate),
  // 61 : ('Update Emoji', 'UPDATE', AuditLogEvent.emojiUpdate),
  // 62 : ('Delete Emoji', 'REMOVE', AuditLogEvent.emojiDelete),
  // 72 : ('Delete Messages', 'REMOVE', AuditLogEvent.messageDelete),
  // 73 : ('Bulk Delete Messages', 'REMOVE', AuditLogEvent.messageBulkDelete),
  // 74 : ('Pin Message', 'ADD', AuditLogEvent.messagePin),
  // 75 : ('Unpin Message', 'REMOVE', AuditLogEvent.messageUnpin),
  // 80 : ('Create Integration', 'ADD', AuditLogEvent.integrationCreate),
  // 81 : ('Update Integration', 'UPDATE', AuditLogEvent.integrationUpdate),
  // 82 : ('Delete Integration', 'REMOVE', AuditLogEvent.integrationDelete),
  // 83 : ('Start Stage', 'ADD', AuditLogEvent.stageInstanceCreate),
  // 84 : ('Update Stage', 'UPDATE', AuditLogEvent.stageInstanceUpdate),
  // 85 : ('End Stage', 'REMOVE', AuditLogEvent.stageInstanceDelete),
  // 90 : ('Create Sticker', 'ADD', AuditLogEvent.stickerCreate),
  // 91 : ('Update Sticker', 'UPDATE', AuditLogEvent.stickerUpdate),
  // 92 : ('Delete Sticker', 'REMOVE', AuditLogEvent.stickerDelete),
  // 100 : ('Create Event', 'ADD', AuditLogEvent.guildScheduledEventCreate),
  // 101 : ('Update Event', 'UPDATE', AuditLogEvent.guildScheduledEventUpdate),
  // 102 : ('Delete Event', 'REMOVE', AuditLogEvent.guildScheduledEventDelete),
  // 110 : ('Create Thread', 'ADD', AuditLogEvent.threadCreate),
  // 111 : ('Update Thread', 'UPDATE', AuditLogEvent.threadUpdate),
  // 112 : ('Delete Thread', 'REMOVE', AuditLogEvent.threadDelete),
  // 121 : ('Update Command Permissions', 'UPDATE', AuditLogEvent.applicationCommandPermissionUpdate),
  // 140 : ('Create AutoMod Rule', 'ADD', AuditLogEvent.autoModerationRuleCreate),
  // 141 : ('Update AutoMod Rule', 'UPDATE', AuditLogEvent.autoModerationRuleUpdate),
  // 142 : ('Cancel AutoMod Rule', 'REMOVE', AuditLogEvent.autoModerationRuleDelete),
  // 143 : ('AutoMod Block Message', 'REMOVE', AuditLogEvent.autoModerationBlockMessage),
};